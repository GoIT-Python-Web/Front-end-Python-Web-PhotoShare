// UsersManagement.jsx
import React, { useState, useEffect } from "react";
import { LayoutList, Trash2 } from "lucide-react";
import UserList from "../../components/UserList/UserList";
import Input from "../../components/UI/inputs/Input";
import Button from "../../components/UI/buttons/Button";
import Title from "../../components/UI/title/Title";
import styles from "./UsersManagement.module.css";
import importedUsers from "../../data/users.json";
import Swal from "sweetalert2";

function UsersManagement() {
  const isBackendPagination = false; //true, –∫–æ–ª–∏ –±–µ–∫–µ–Ω–¥ –≥–æ—Ç–æ–≤–∏–π

  const usersPerPage = 10; // –°–∫—ñ–ª—å–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
  const [currentPage, setCurrentPage] = useState(0); // –Ω–æ–º–µ—Ä –ø–æ—Ç–æ—á–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –¥–ª—è –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó
  const [backendTotalPages, setBackendTotalPages] = useState(1); // –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç–æ—Ä—ñ–Ω–æ–∫ –∑ –±–µ–∫–∞

  const [users, setUsers] = useState(importedUsers); // –°–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ –¥–∂–µ—Å–æ–Ω–∞
  const [searchQuery, setSearchQuery] = useState(""); // –¢–µ–∫—Å—Ç –ø–æ—à—É–∫—É

  // üîç –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –ø–æ —ñ–º–µ–Ω—ñ (frontend only)
  const filteredUsers = users.filter((user) =>
    user.userName.toLowerCase().includes(searchQuery.toLowerCase())
  );

  //–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç–æ—Ä—ñ–Ω–æ–∫
  const totalPages = isBackendPagination
    ? backendTotalPages
    : Math.ceil(filteredUsers.length / usersPerPage);

  //–Ü–Ω–¥–µ–∫—Å –ø–µ—Ä—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (frontend only)
  const startIndex = currentPage * usersPerPage;

  //–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
  const currentUsers = isBackendPagination
    ? users //–£–∂–µ –ø–∞–≥—ñ–Ω–æ–≤–∞–Ω—ñ –∑ –±–µ–∫–µ–Ω–¥—É
    : filteredUsers.slice(startIndex, startIndex + usersPerPage);

  //–ó–∞–ø–∏—Ç –Ω–∞ –±–µ–∫–µ–Ω–¥ –ø—Ä–∏ –∑–º—ñ–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
  useEffect(() => {
    if (!isBackendPagination) return;

    const fetchUsers = async () => {
      try {
        const res = await fetch(
          `/api/users?page=${currentPage + 1}&limit=${usersPerPage}`
        );
        const data = await res.json();
        setUsers(data.users);
        setBackendTotalPages(data.totalPages); // –∞–±–æ Math.ceil(data.total / limit)
      } catch (error) {
        console.error("Error fetching users:", error);
      }
    };

    fetchUsers();
  }, [currentPage, isBackendPagination]);

  // –í–∏–¥–∞–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è–º —á–µ—Ä–µ–∑ sweetalert2
  const handleDeleteClick = (userId) => {
    Swal.fire({
      title: "–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ?",
      text: "–¶—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –±—É–¥–µ –≤–∏–¥–∞–ª–µ–Ω–æ!",
      icon: "warning",
      showCancelButton: true,
      confirmButtonText: "–¢–∞–∫, –≤–∏–¥–∞–ª–∏—Ç–∏",
      cancelButtonText: "–°–∫–∞—Å—É–≤–∞—Ç–∏",
    }).then((result) => {
      if (result.isConfirmed) {
        setUsers((prev) => prev.filter((user) => user.id !== userId));
        Swal.fire("–í–∏–¥–∞–ª–µ–Ω–æ!", "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–∏–¥–∞–ª–µ–Ω–æ.", "success");
      }
    });
  };

  const handlePrev = () => {
    if (currentPage > 0) {
      setCurrentPage((prev) => prev - 1);
    }
  };

  const handleNext = () => {
    if (currentPage < totalPages - 1) {
      setCurrentPage((prev) => prev + 1);
    }
  };
  console.log("USERS üëâ", users, Array.isArray(users));
  return (
    <div className={styles.usersPage}>
      <Title location="admin" />

      <div className={styles.searchContainer}>
        <Input
          placeholder="–ü–æ—à—É–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ / –ø–æ—à—É–∫ –∑–∞ —Ç–µ–≥–æ–º"
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)}
        />

        <div className={styles.iconButtons}>
          <Button size="sm" variant="secondary">
            <Trash2 size={18} />
          </Button>
          <Button size="sm" variant="secondary">
            <LayoutList size={18} />
          </Button>
        </div>
      </div>

      <div className={styles.userListWrapper}>
        <UserList users={currentUsers} onDelete={handleDeleteClick} />
      </div>

      <div className={styles.pagination}>
        <Button
          size="md"
          variant="primary"
          withArrow
          arrowPosition="left"
          onClick={handlePrev}
          disabled={currentPage === 0}
        >
          –ù–∞–∑–∞–¥
        </Button>

        <Button
          size="md"
          variant="primary"
          withArrow
          arrowPosition="right"
          onClick={handleNext}
          disabled={currentPage >= totalPages - 1}
        >
          –î–∞–ª—ñ
        </Button>
      </div>
    </div>
  );
}

export default UsersManagement;
